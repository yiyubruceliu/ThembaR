{
  "contractName": "Agreement",
  "abi": [],
  "bytecode": "0x60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a7230582070f842530557a1327be64507a3686459a2ead018d1d7c44eba4dc090955705c20029",
  "deployedBytecode": "0x6060604052600080fd00a165627a7a7230582070f842530557a1327be64507a3686459a2ead018d1d7c44eba4dc090955705c20029",
  "sourceMap": "55:2909:0:-;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "55:2909:0:-;;;;;",
  "source": "pragma solidity ^0.4.16;\n\nimport \"./ThembaR.sol\";\n\n    contract Agreement {\n        // address owner;\n        // address ownerToken;\n        // address signer;\n        // address signerToken;\n        // uint  direction;\n        // uint left;\n        // uint right;\n        // bool  signed;\n        // bool canPort;\n\n        // function Agreement(address _signer, address _ownerToken, uint _direction, uint _left, uint _right, bool _canPort) public {\n        //     owner = msg.sender;\n        //     signer = _signer;\n        //     ownerToken = _ownerToken;\n        //     direction = _direction;\n        //     left = _left;\n        //     right = _right;\n        //     signed = false;\n        //     canPort = _canPort;\n        // }\n        // function signArrangement(address _signerToken) public returns (bool) {\n        //      if (msg.sender == signer) {\n        //              signerToken = _signerToken;\n        //              signed = true;\n        //              return true;\n        //      }\n        //      return false;    \n        // }\n        // function checkCredential(address _from) private view returns (bool) {\n        //     return (direction == 2 || (direction == 0 && _from == owner) || (direction == 1 && _from == signer));\n        // }\n        // function port(address _fromToken, uint amount) external returns (bool) {\n        //     require(canPort);\n        //     require((_fromToken == ownerToken) || (_fromToken == signerToken));\n        //     ThembaR tr = ThembaR(_fromToken);\n        //     require(tr.balanceOf(msg.sender) >= amount);\n        //     uint otherAmount;\n        //     ThembaR otherAddress;\n        //     if (_fromToken == ownerToken && checkCredential(_fromToken)) {\n        //          otherAmount = amount*(right/left);\n        //          otherAddress = ThembaR(signerToken);\n        //         tr.specialTransfer(signer, amount, msg.sender, this);\n        //         otherAddress.specialTransfer(msg.sender, otherAmount,signer,this);\n        //     } else if (checkCredential(_fromToken)) {\n        //          otherAmount = amount*(left/right);\n        //          otherAddress = ThembaR(ownerToken);\n        //         tr.specialTransfer(owner, amount, msg.sender, this);\n        //         otherAddress.specialTransfer(msg.sender, otherAmount,owner, this);\n        //     } \n\n        // }\n        //   function portAndPay(address _fromToken, uint amount) external returns (bool) {\n        //     require((_fromToken == ownerToken) || (_fromToken == signerToken));\n        //     ThembaR tr = ThembaR(_fromToken);\n        //     require(tr.balanceOf(msg.sender) >= amount);\n        //     if (_fromToken == ownerToken && checkCredential(_fromToken)) {\n        //         tr.specialTransfer(signer, amount, msg.sender, this);          \n        //     } else if (checkCredential(_fromToken)) {\n        //         tr.specialTransfer(owner, amount, msg.sender, this);\n        //     } \n\n        // }\n    }\n",
  "sourcePath": "/home/bruce/Documents/Proj/ThembaR/contracts/Agreement.sol",
  "ast": {
    "attributes": {
      "absolutePath": "/home/bruce/Documents/Proj/ThembaR/contracts/Agreement.sol",
      "exportedSymbols": {
        "Agreement": [
          3
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".16"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "attributes": {
          "SourceUnit": 48,
          "absolutePath": "/home/bruce/Documents/Proj/ThembaR/contracts/ThembaR.sol",
          "file": "./ThembaR.sol",
          "scope": 4,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "26:23:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            3
          ],
          "name": "Agreement",
          "nodes": [
            null
          ],
          "scope": 4
        },
        "id": 3,
        "name": "ContractDefinition",
        "src": "55:2909:0"
      }
    ],
    "id": 4,
    "name": "SourceUnit",
    "src": "0:2965:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.18+commit.9cf6e910.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "1.0.1",
  "updatedAt": "2018-01-30T10:32:20.207Z"
}